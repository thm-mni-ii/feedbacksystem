version: "3"

services:
  mysql1:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "127.0.0.1:3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: twRuvi2ejllDdA4nnQLa08O
      MYSQL_DATABASE: fbs
    volumes:
      - ./data/mysql1:/var/lib/mysql
    networks:
      fbs:
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
      timeout: 10s
      interval: 10s
      start_period: 10s
      retries: 3

  runtime-bash:
    build: runtime-images/bash

  sql-checker:
    image: feedbacksystem_sql-checker
    build: modules/fbs-sql-checker

  core:
    build:
      context: .
      dockerfile: modules/fbs-core/api/Dockerfile
    restart: unless-stopped
    depends_on:
      - mysql1
      - runner
    ports:
      - "127.0.0.1:443:443"
      - "127.0.0.1:80:80"
    volumes:
      - ./data/upload-dir:/upload-dir
      - ./conf/fbs-core.api:/usr/local/fbs-core.api/conf
    environment:
      - SERVER_HOST=https://localhost
      - KAFKA_ADDRESS=kafka1:9092
      - MYSQL_URI=jdbc:mysql://mysql1:3306
      - MYSQL_USER=root
      - MYSQL_PASSWORD=twRuvi2ejllDdA4nnQLa08O
      - JWT_SECRET=8Dsupersecurekeydf0
      - CLASSROOM_URL=http://digital-classroom:8085
      - CLASSROOM_SECRET=8Dsupersecurekeydf0
      - CLASSROOM_TLS_INSECURE=true
      - MASTER_RUNNER_URL=https://runner:8081
      - MASTER_RUNNER_TLS_INSECURE=true
      - MONGODB_URI=mongodb://mongodb:27017/sql-checker
      - MONGODB_DATABASE=sql-checker
      - SELF_URL=https://core
      - MINIO_URL=http://minio
    networks:
      classroom:
      fbs:
    healthcheck:
      test: curl -k https://localhost:443/actuator/health
      timeout: 10s
      interval: 10s
      start_period: 10s
      retries: 3

  mysql-checker:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password --sql_mode=""
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: SqfyBWhiFGr7FK60cVR2rel
    volumes:
      - ./data/mysql2:/var/lib/mysql
    networks:
      fbs:
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
      timeout: 10s
      interval: 10s
      start_period: 10s
      retries: 3

  psql-checker:
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: SqfyBWhiFGr7FK60cVR2rel
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./data/postgres2:/var/lib/postgresql/data
    networks:
      fbs:
    healthcheck:
      test: pg_isready
      timeout: 10s
      interval: 10s
      start_period: 10s
      retries: 3

  psql-playground:
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: SqfyBWhiFGr7FK60cVR2rel
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./data/postgres-playground:/var/lib/postgresql/data
    networks:
      fbs:
    healthcheck:
      test: pg_isready
      timeout: 10s
      interval: 10s
      start_period: 10s
      retries: 3

  psql-sharing:
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: R!7pWqY@K5zE3Xt&g9L1MfD
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "8432:5432"
    volumes:
      - ./data/psql-sharing:/var/lib/postgresql/data
    networks:
      fbs:
    healthcheck:
      test: pg_isready
      timeout: 10s
      interval: 10s
      start_period: 10s
      retries: 3

  mongodb:
    image: mongo:5.0.6
    restart: unless-stopped
    volumes:
      - ./data/mongodb:/data/db
    ports:
      - "127.0.0.1:27017:27017"
    networks:
      fbs:
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb://localhost:27017/ --quiet
      timeout: 10s
      interval: 10s
      start_period: 10s
      retries: 3

  mongodb_qcm:
    image: mongo:5.0.6
    container_name: mongodb_qcm
    restart: unless-stopped
    volumes:
      - ./data/mongodb_qcm/:/data/qcm_db
    ports:
      - "127.0.0.1:27018:27017"
    networks:
      fbs:

  minio:
    image: minio/minio:RELEASE.2022-10-29T06-21-33Z
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    volumes:
      - ./data/minio_storage:/data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: SqfyBWhiFGr7FK60cVR2rel
    command: server --console-address ":9001" /data
    restart: unless-stopped
    networks:
      fbs:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      timeout: 10s
      interval: 10s
      start_period: 10s
      retries: 3

  runner:
    build:
      context: .
      dockerfile: modules/fbs-runner/checker/Dockerfile
    restart: always
    depends_on:
      - mysql-checker
      - psql-checker
      - psql-sharing
    ports:
      - "127.0.0.1:8081:8081"
    environment:
      BASH_DOCKER: thmmniii/fbs-runtime-bash:dev-latest
      HOST_TMP_DIR: /tmp/feebi # Need to be the same folder as mounted to /dockertemp
      INSIDE_DOCKER: "true"
      RESULT_SERVER_HOST: core
      MYSQL_SERVER_URL: jdbc:mysql://mysql-checker:3306?allowMultiQueries=true
      MYSQL_SERVER_PASSWORD: SqfyBWhiFGr7FK60cVR2rel
      PSQL_SERVER_URL: jdbc:postgresql://psql-checker:5432/?allowMultiQueries=true
      PSQL_SERVER_PASSWORD: SqfyBWhiFGr7FK60cVR2rel
      PSQL_SERVER_USERNAME: postgres
      SQL_PLAYGROUND_PSQL_SERVER_URL: jdbc:postgresql://psql-playground:5432/?allowMultiQueries=true
      SQL_PLAYGROUND_PSQL_SERVER_PASSWORD: SqfyBWhiFGr7FK60cVR2rel
      SQL_PLAYGROUND_PSQL_SERVER_USERNAME: postgres
      HMAC_SECRET: uigbduhegafudegufqu8o3q4tgru4ieubfiel
      RUNNER_SQL_CHECKER_IMAGE: feedbacksystem_sql-checker
      SQL_PLAYGROUND_SHARE_PSQL_SERVER_URL: jdbc:postgresql://psql-sharing:5432/?allowMultiQueries=true
      SQL_PLAYGROUND_SHARE_PSQL_SERVER_PASSWORD: R!7pWqY@K5zE3Xt&g9L1MfD
      SQL_PLAYGROUND_SHARE_PSQL_SERVER_USERNAME: postgres
    volumes:
      - /tmp/feebi:/dockertemp # A temp dir where docker image stores task submissions temporarily
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/upload-dir:/upload-dir
    networks:
      fbs:
    healthcheck:
      test: curl -k https://localhost:8081
      timeout: 10s
      interval: 10s
      start_period: 10s
      retries: 3

  digital-classroom:
    image: ghcr.io/thm-mni-ii/digital-classroom:latest
    restart: unless-stopped
    ports:
      - "127.0.0.1:8085:8085"
    environment:
      - CLASSROOM_SSL_ENABLED=false
      - CLASSROOM_BBB_UPSTREAM_URL=https://localhost/bbb
      - CLASSROOM_BBB_UPSTREAM_SECRET=8Dsupersecurekeydf0
      - CLASSROOM_SECRET=8Dsupersecurekeydf0
      - CLASSROOM_HOST=http://localhost:8085
      - CLASSROOM_PORT=8085
      - CLASSROOM_JWT_SECRET=8Dsupersecurekeydf0
      - CLASSROOM_JWT_EXPIRATION=900
    networks:
      classroom:

  dashboard:
    build:
      context: modules/fbs-eat/eat
    restart: always
    ports:
      - 5000:8050
    networks:
      - fbs
    environment:
      - JWT_SECRET=8Dsupersecurekeydf0
      - SERVER_SESSION_SECRET=sessiosecret
      - MONGODB_URL=mongodb://mongodb:27017/sql-checker
      - URL_BASE_PATH=/eat/
      - FBS_BASE_URL=https://core:443
      - FBS_TLS_NO_VERIFY=true

  qcm:
    build:
      context: modules/fbs-qcm/
      target: production
    ports:
      - 3000:3000
    networks:
      - fbs
    environment:
      - JWT_SECRET=8Dsupersecurekeydf0
      - MONGODB_URL=mongodb://mongodb_qcm:27017/
      - FBS_USER=qcm
      - FBS_PW=d8eb166e366d5e8f79e266a608aa09ff
    depends_on:
      - mongodb_qcm

networks:
  classroom:
  fbs:
