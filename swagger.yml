openapi: 3.0.0
info:
  title: Feedbacksystem
  description: Feedbacksystem API
  version: 1.0.0
  contact:
    email: Andrej.Sajenko@mni.thm.de
  license:
    name: CC BY-NC-SA 4.0
    url: https://creativecommons.org/licenses/by-nc-sa/4.0/
tags:
  - name: Login
    description: Login api
  - name: User
    description: The user api
  - name: Course
    description: The course api
  - name: Course Registration
    description: The course registration api
  - name: Task
    description: The task api
  - name: Course evaluation
    description: Course evaluation api
  - name: Course Results
    description: Course Results api
  - name: Checker Configuration
    description: Checker configuration api
  - name: Submission
    description: Task submission api
  - name: Legal
    description: Legally obligatory documents and checks
  - name: Result
    description: Incomming checker results
paths:
  /login/cas:
    post:
      tags:
        - Login
      summary: Login into system via the cas protocol
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "401":
          description: Unauthorized
  /login/ldap:
    post:
      tags:
        - Login
      summary: Login into system via username and password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "401":
          description: Unauthorized
  /login/local:
    post:
      tags:
        - Login
      summary: Login into system via username and password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "401":
          description: Unauthorized
  /users:
    get:
      security:
        - JWT: []
      tags:
        - User
      summary: Get user list
      description: ""
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    post:
      security:
        - JWT: []
      tags:
        - User
      summary: Create a new user
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        description: User object to create
        required: true
      responses:
        "201":
          description: Created
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "400":
          description: Invalid Format
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Already Existing
  "/users/{uid}":
    get:
      security:
        - JWT: []
      tags:
        - User
      summary: Find user by ID
      description: Returns a single user
      parameters:
        - name: uid
          in: path
          description: user id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
    delete:
      security:
        - JWT: []
      tags:
        - User
      summary: Delete user by ID
      description: ""
      parameters:
        - name: uid
          in: path
          description: user id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/users/{uid}/passwd":
    put:
      security:
        - JWT: []
      tags:
        - User
      summary: Change password of a local user
      description: ""
      parameters:
        - name: uid
          in: path
          description: user id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - passwd
                - passwdRepeat
              properties:
                passwd:
                  type: string
                passwdRepeat:
                  type: string
        description: The new password
        required: true
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "400":
          description: Invalid Format
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
  "/users/{uid}/global-role":
    put:
      security:
        - JWT: []
      tags:
        - User
      summary: Change global role of a user
      description: ""
      parameters:
        - name: uid
          in: path
          description: user id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - roleName
              properties:
                roleName:
                  type: string
        description: The global role id
        required: true
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "400":
          description: Invalid Format
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
  "/users/{uid}/courses":
    get:
      security:
        - JWT: []
      tags:
        - Course Registration
      summary: Get all registered courses
      description: ""
      parameters:
        - name: uid
          in: path
          description: user id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Course"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
  "/courses/{cid}/participants":
    get:
      security:
        - JWT: []
      tags:
        - Course Registration
      summary: Get all participants of a course
      description: ""
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Participant"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
  "/users/{uid}/courses/{cid}":
    put:
      security:
        - JWT: []
      tags:
        - Course Registration
      summary: Register a user into a course
      parameters:
        - name: uid
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - roleName
              properties:
                roleName:
                  type: string
        description: "Course role: either DOCENT, TUTOR, or STUDENT. Default is STUDENT"
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
    delete:
      security:
        - JWT: []
      tags:
        - Course Registration
      summary: De-register a user from a course
      parameters:
        - name: uid
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /courses:
    get:
      security:
        - JWT: []
      tags:
        - Course
      summary: Get a list of all courses
      description: ""
      parameters:
        - name: visible
          in: query
          description: Returns all courses that satisfy the visibility value [true, false]
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Course"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    post:
      security:
        - JWT: []
      tags:
        - Course
      summary: Create a new course
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Course"
        description: Course object to create
        required: true
      responses:
        "201":
          description: Created
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Course"
        "400":
          description: Invalid Format
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/courses/{cid}":
    get:
      security:
        - JWT: []
      tags:
        - Course
      summary: Get a course
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Course"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
    put:
      security:
        - JWT: []
      tags:
        - Course
      summary: Update course
      description: ""
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Course"
        description: Course object to update
        required: true
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "400":
          description: Invalid format
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
    delete:
      security:
        - JWT: []
      tags:
        - Course
      summary: Delete course by ID
      description: ""
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/courses/{cid}/export":
    get:
      security:
        - JWT: []
      tags:
        - Course
      summary: Get a Zip-Archive of the course
      description: Get a Zip containing an archive of the course and tasks without user data
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/zip:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
  "/courses/{cid}/tasks":
    get:
      security:
        - JWT: []
      tags:
        - Task
      summary: Get all tasks of a course
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
    post:
      security:
        - JWT: []
      tags:
        - Task
      summary: Create a new task for this course
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Task"
      responses:
        "201":
          description: Created
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
  "/courses/{cid}/tasks/{tid}":
    get:
      security:
        - JWT: []
      tags:
        - Task
      summary: Get a task by id
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
    put:
      security:
        - JWT: []
      tags:
        - Task
      summary: Update an existing task for this course
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Task"
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Task"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
    delete:
      security:
        - JWT: []
      tags:
        - Task
      summary: Delete a task by id
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/courses/evaluation/formula/validate":
    post:
      security:
        - JWT: []
      tags:
        - Course evaluation
      summary: Validate a evaluation formula
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              type: object
              properties:
                formula:
                  type: string
      responses:
        "200":
          description: Formula is valid
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            "application/json":
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    default: true
                  message:
                    type: string

        "400":
          description: Formula is invalid
          content:
            "application/json":
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    default: false
                  message:
                    type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/courses/{cid}/evaluation/container":
    get:
      security:
        - JWT: []
      tags:
        - Course evaluation
      summary: Get all Course evaluation Containers
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EvaluationContainer'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      security:
        - JWT: []
      tags:
        - Course evaluation
      summary: Create a Course evaluation Container
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEvaluationContainer'
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/EvaluationContainer'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found

  "/courses/{cid}/evaluation/container/{ctid}":
    get:
      security:
        - JWT: []
      tags:
        - Course evaluation
      summary: Get a Course evaluation Container
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: ctid
          in: path
          description: Container id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/EvaluationContainer'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      security:
        - JWT: []
      tags:
        - Course evaluation
      summary: Update a Course evaluation Container
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: ctid
          in: path
          description: Container id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEvaluationContainer'
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/EvaluationContainer'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      security:
        - JWT: []
      tags:
        - Course evaluation
      summary: Delete a Course evaluation Container
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: ctid
          in: path
          description: Container id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/EvaluationContainer'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/courses/{cid}/evaluation/container/{ctid}/task/{tid}":
    post:
      security:
        - JWT: []
      tags:
        - Course evaluation
      summary: Add a Task to an Course evaluation Container
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: ctid
          in: path
          description: Container id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: Task id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/EvaluationContainer'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      security:
        - JWT: []
      tags:
        - Course evaluation
      summary: Delate a Task from an Course evaluation Container
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: ctid
          in: path
          description: Container id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: Task id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/EvaluationContainer'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found

  "/courses/{cid}/results":
    get:
      security:
        - JWT: [ ]
      tags:
        - Course Results
      summary: Get the Results for a Course
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/CourseResult'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found

  "/courses/{cid}/evaluation/results":
    get:
      security:
        - JWT: [ ]
      tags:
        - Course Results
      summary: Get the Evaluation Results for a Course
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/EvaluationResults'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found

  "/users/{uid}/courses/{cid}/tasks/{tid}/submissions":
    get:
      security:
        - JWT: []
      tags:
        - Submission
      summary: Get all submissions for a task
      parameters:
        - name: uid
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
        - in: query
          name: passed
          description: Filters only the passed submissions
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Submission"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      security:
        - JWT: []
      tags:
        - Submission
      summary: Submit a solution for a task
      parameters:
        - name: uid
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          "*/*":
            schema:
              format: binary
        description: The solution for the task
        required: true
      responses:
        "201":
          description: Created
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Submission"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/users/{uid}/courses/{cid}/tasks/{tid}/submissions/{sid}":
    put:
      security:
        - JWT: []
      tags:
        - Submission
      summary: Restart the submission process
      parameters:
        - name: uid
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
        - name: sid
          in: path
          description: ID of submission
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    get:
      security:
        - JWT: []
      tags:
        - Submission
      summary: Get the current submission state
      parameters:
        - name: uid
          in: path
          description: user id
          required: true
          schema:
            type: integer
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
        - name: sid
          in: path
          description: ID of submission
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Submission"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/courses/{cid}/tasks/{tid}/checker-configurations":
    get:
      security:
        - JWT: []
      tags:
        - Checker Configuration
      summary: Get a list of configured checkers
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CheckerConfig"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      security:
        - JWT: []
      tags:
        - Checker Configuration
      summary: Create a new checker configuration
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckerConfig"

      responses:
        "201":
          description: Created
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckerConfig"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/courses/{cid}/tasks/{tid}/checker-configurations/{ccid}":
    put:
      security:
        - JWT: []
      tags:
        - Checker Configuration
      summary: Update an existing checker configuration
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
        - name: ccid
          in: path
          description: ID of checker configuration
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckerConfig'
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      security:
        - JWT: []
      tags:
        - Checker Configuration
      summary: Delete an existing checker configuration
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
        - name: ccid
          in: path
          description: ID of checker configuration
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/courses/{cid}/tasks/{tid}/checker-configurations/{ccid}/main-file":
    get:
      security:
        - JWT: []
      tags:
        - Checker Configuration
      summary: Get a the main file of the configuration
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
        - name: ccid
          in: path
          description: configuration id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            text/*:
              schema:
                type: string
                format: binary
            application/*:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      security:
        - JWT: []
      tags:
        - Checker Configuration
      summary: Update / upload a new file
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
        - name: ccid
          in: path
          description: configuration id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: new file
        content:
          "*/*":
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/courses/{cid}/tasks/{tid}/checker-configurations/{ccid}/secondary-file":
    get:
      security:
        - JWT: []
      tags:
        - Checker Configuration
      summary: Get a list of configured checkers
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
        - name: ccid
          in: path
          description: configuration id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
          content:
            text/*:
              schema:
                type: string
                format: binary
            application/*:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      security:
        - JWT: []
      tags:
        - Checker Configuration
      summary: Update / upload a new file
      parameters:
        - name: cid
          in: path
          description: course id
          required: true
          schema:
            type: integer
        - name: tid
          in: path
          description: task id
          required: true
          schema:
            type: integer
        - name: ccid
          in: path
          description: configuration id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        description: new file
        content:
          "*/*":
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer
              schema:
                type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /legal/impressum:
    get:
      tags:
        - Legal
      summary: Returns the imprint
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
                format: binary
  /legal/privacy-text:
    get:
      tags:
        - Legal
      summary: Returns the information how user data is treated in the system
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
                format: binary
  "/legal/termsofuse/{uid}":
    get:
      tags:
        - Legal
      summary: Get the information if a user accepted the terms of usage
      parameters:
        - in: path
          name: uid
          required: true
          description: User id
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
                properties:
                  accepted:
                    type: boolean
                    description: True if accepted, false otherwise
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
        - Legal
      summary: Accept the terms of usage
      parameters:
        - in: path
          name: uid
          required: true
          description: User id
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/results/{sid}/{cid}":
    put:
      tags:
        - Result
      summary: Incomming checker results
      parameters:
        - in: path
          name: sid
          required: true
          description: Submission id
          schema:
            type: integer
        - in: path
          name: cid
          required: true
          description: Configuration id
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
servers:
  - url: https://feedback.mni.thm.de/api/v1
components:
  requestBodies:
    postCourses_cid_tasks_tid_checkerConfigurations:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              upfile:
                description: The file to upload.
                type: string
                format: binary
    Task:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Task"
      description: Task object to create
      required: true
  securitySchemes:
    JWT:
      type: apiKey
      in: header
      name: Authorization
      description: Bearer
  schemas:
    User:
      type: object
      required:
        - username
        - prename
        - surname
        - postname
        - email
        - password
      properties:
        id:
          type: integer
        prename:
          type: string
        surname:
          type: string
        email:
          type: string
        password:
          type: string
          description: Only for creation
        username:
          type: string
        alias:
          type: string
        globalRole:
          type: string
          description: "Either, ADMIN, MODERATOR, or USER. Default is USER"
    Course:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        visible:
          type: boolean
    Task:
      type: object
      required:
        - name
        - deadline
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        deadline:
          type: string
          description: ISO-8601 time as string
        mediaType:
          type: string
          description: The media type for the submissions according to RFC 4288
        mediaInformation:
          description: Media type spezific Information
          oneOf:
            - $ref: '#/components/schemas/SpreadsheetInformationRequest'
            - $ref: '#/components/schemas/SpreadsheetInformationResponse'
    SpreadsheetInformationRequest:
      type: object
      properties:
        idField:
          type: string
        inputFields:
          type: string
        outputFields:
          type: string
    SpreadsheetInformationResponse:
      type: object
      properties:
        fields:
          type: object
          properties:
            inputs:
              type: array
              items:
                type: object
            outputs:
              type: array
              items:
                type: string
    Submission:
      type: object
      required:
        - submissionTime
        - done
        - id
        - results
      properties:
        submissionTime:
          type: integer
          description: Unix time as long
        done:
          type: boolean
          description: True if all checkers have checked the submissions
        id:
          type: integer
          description: The submission id
        results:
          type: array
          description: The check results of each configured checker, may be empty
          items:
            $ref: '#/components/schemas/CheckResult'
    CheckResult:
      type: object
      required:
        - exitCode
        - resultText
        - checkerType
        - configurationId
      properties:
        exitCode:
          type: integer
          description: Exit code of the check result 0 is okay
        resultText:
          type: string
          description: The output the check
        checkerType:
          type: string
          description: The type of the checker that checked the submission
        configurationId:
          type: integer
          description: The configuration id of the checker configuration
        extInfo:
          type: object
          nullable: true
          additionalProperties: true
          description: Extended information of the check
    CheckerConfig:
      type: object
      required:
        - checkerType
        - ord
      properties:
        id:
          type: integer
        checkerType:
          type: string
        mainFileUploaded:
          type: boolean
          description:  True if main file was provided
        secondaryFileUploaded:
          type: boolean
          description: True if secondary file was provided
        ord:
          type: integer
          description: Defines in which order the checker are executed
    Participant:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        role:
          type: string
          description: Users course role name. Either DOCENT, TUTOR, or STUDENT.
    JWTToken:
      type: object
      properties:
        id:
          type: integer
          description: The users id
        username:
          type: string
          description: The users username
        globalRole:
          type: string
          description: The users global role id
        courseRoles:
          type: object
          description: "Associative array: course id -> role id (Either, DOCENT, TUTOR, or STUDENT)"
          properties:
            key:
              type: integer
              description: The course id
            value:
              type: integer
              description: "The course role "
    AddEvaluationContainer:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
        toPass:
          type: integer
          description: The number of tasks that need to be passed
        bonusFormula:
          type: string
          description: The formula that defines when you get the bonus points of the container
        hidePoints:
          type: boolean
    EvaluationContainer:
      type: object
      required:
        - id
        - tasks
      properties:
        id:
          type: integer
        tasks:
          type: array
          description: "List of tasks"
          items:
            $ref: "#/components/schemas/Task"
        toPass:
          type: integer
          description: The number of tasks that need to be passed
        bonusFormula:
          type: string
          description: The formula that defines when you get the bonus points of the container
        hidePoints:
          type: boolean
    CourseResult:
      type: array
      items:
        type: object
        required:
          - user
          - passed
          - reqPassed
          - pointScore
          - bonusScore
          - results
        properties:
          user:
            $ref: "#/components/schemas/User"
          passed:
            type: boolean
          results:
            type: object
            required:
              - task
              - attempts
              - passed
            properties:
              task:
                $ref: "#/components/schemas/Task"
              attempts:
                type: integer
              passed:
                type: boolean
    EvaluationResults:
      type: array
      items:
        type: object
        required:
          - user
          - bonusPoints
          - passed
          - results
        properties:
          user:
            $ref: "#/components/schemas/User"
          bonusPoints:
            type: integer
          passed:
            type: boolean
          results:
            $ref: "#/components/schemas/EvaluationContainerResults"
    EvaluationContainerResults:
      type: array
      items:
        type: object
        required:
          - bonusPoints
          - passed
          - passedTasks
          - container
        properties:
          bonusPoints:
            type: integer
          passed:
            type: boolean
          passedTasks:
            type: integer
          container:
            $ref: "#/components/schemas/EvaluationContainerResult"
    EvaluationContainerResult:
      allOf:
        - $ref: '#/components/schemas/EvaluationContainer'
        - type: object
          required:
            - id
            - tasks
            - toPass
            - bonusFormula
            - hidePoints
          properties:
            tasks:
              type: object
              required:
                - task
                - attempts
                - passed
              properties:
                task:
                  $ref: "#/components/schemas/Task"
                attempts:
                  type: integer
                passed:
                  type: boolean
