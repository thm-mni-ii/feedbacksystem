{{ if and .Values.core.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-core
  labels:
    app: {{ .Release.Name }}-core
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-core
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-core
    spec:
      containers:
      - name: {{ .Release.Name }}-core
        image: {{ .Values.core.image.registry }}/{{ .Values.core.image.name }}:{{ .Values.core.image.tag }}
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        env:
          - name: SERVER_HOST
            configMapKeyRef:
              name: {{ .Release.Name }}-common
              key: host
          - name: MYSQL_URI
            secretKeyRef:
              name: {{ .Release.Name }}-core
              key: mysqJdbclUri
          - name: MYSQL_USER
            configMapKeyRef:
              name: {{ .Release.Name }}-core
              key: mysqlUser
          - name: MYSQL_PASSWORD
            secretKeyRef:
              name: {{ .Release.Name }}-core
              key: mysqlPassword
          - name: JWT_SECRET
           secretKeyRef:
              name: {{ .Release.Name }}-core
              key: jwtSecret
          - name: CLASSROOM_URL
            value: http://{{ .Release.Name }}-digital-classroom:8055
          - name: CLASSROOM_SECRET
            secretKeyRef:
              name: {{ .Release.Name }}-classroom
              key: secret
          - name: CLASSROOM_TLS_INSECURE
            value: true
          - name: MASTER_RUNNER_URL
            value: https://{{ .Release.Name }}-master-runner:8001
          - name: MASTER_RUNNER_TLS_INSECURE
            value: true
          - name: MONGODB_URI
            secretKeyRef:
              name: {{ .Release.Name }}-sql-checker
              key: mongodbUri
          - name: MONGODB_DATABASE
            configMapKeyRef:
              name: {{ .Release.Name }}-sql-checker
              key: mongoDatabase
          - name: SELF_URL
            value: https://{{ .Release.Name }}-core
        resources:
          requests:
            cpu: {{ .Values.core.resources.cpu.request }}
            memory: {{ .Values.core.resources.memory.request }}
          limits:
            cpu: {{ .Values.core.resources.cpu.limit }}
            memory: {{ .Values.core.resources.memory.limit }}
        volumeMounts:
        - name: config
          mountPath: /usr/local/fbs-core.api/conf
        - name: upload-dir
          mountPath: /upload-dir
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-core-config
      - name: upload-dir
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-core-upload-dir
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .Release.Name }}-core
data:
  jwtSecret: {{ .Values.core.config.jwtSecret | b64enc }}
  mysqJdbclUri: {{ print "jdbc:mysql://" .Release.Name "-mysql" ":3306" | b64enc }}
  mysqlUser:  {{ .Values.mysql.auth.username | b64enc }}
  mysqlPassword: {{ .Values.mysql.auth.passwords | b64enc }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-core
  labels:
    app: {{ .Release.Name }}-core
spec:
  selector:
    app: {{ .Release.Name }}-core
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-core-config
spec:
  accessModes:
    - {{ .Values.core.volumes.config.mode }}
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ .Values.core.volumes.config.size }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-core-upload-dir
spec:
  accessModes:
    - {{ .Values.core.volumes.uploadDir.mode }}
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ .Values.core.volumes.uploadDir.size }}
{{ end }}
