plugins {
    id "org.springframework.boot" version "2.7.12"
    id 'jacoco'
    id "com.github.alisiikh.scalastyle" version "3.5.0"
    id "org.jetbrains.kotlin.jvm" version "1.7.20"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.7.20"
    id "org.jlleitschuh.gradle.ktlint" version "11.3.2"
}

apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

mainClassName = 'de.thm.ii.fbs.Application'

jar {
    enabled = true
}

bootRun {
    def confidir = new File(".").absolutePath + "/docker-config/"
    print("CONFDIR: " + confidir)
    jvmArgs =
            [
                    "-Dconfdir=" + confidir
            ]

}

repositories {
    mavenCentral()
}

scalastyle {
    config = file(scalaStyleConfig)
    failOnWarning = true
}

// customize start scripts
startScripts {
    // customize application name
    applicationName = 'wsd'
}

dependencies {
    implementation 'org.apache.tika:tika-core:2.8.0'
    implementation 'org.apache.tika:tika-parsers:2.8.0'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.7.21'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'
    implementation group: 'io.minio', name: 'minio', version: '8.5.4'
    implementation group: 'org.scala-lang.modules', name: 'scala-xml_2.13', version: '2.2.0'
    compileOnly 'org.scala-lang:scala-library:2.13.10'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.2'
    implementation 'com.fasterxml.jackson.module:jackson-module-scala_2.13:2.14.2'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation('net.unicon.cas:cas-client-autoconfig-support:2.1.0-GA')
    implementation('org.json:json:20230618')
    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'
    implementation group: 'org.ldaptive', name: 'ldaptive', version: '2.1.1'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation 'com.udojava:EvalEx:2.7'
    implementation 'org.mongodb:bson:4.10.2'
    implementation 'org.mongodb:mongodb-driver-core:4.10.2'
    implementation 'org.mongodb:mongodb-driver-sync:4.10.2'
    implementation 'org.springframework.data:spring-data-bom:2021.2.5'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.data:spring-data-commons'
    implementation 'org.springframework.data:spring-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.projectreactor:reactor-core:3.5.6'
    implementation 'jakarta.platform:jakarta.jakartaee-api:10.0.0'
    implementation project(':fbs-core.math-parser')
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.23.0'
    implementation group: 'org.jgrapht', name: 'jgrapht-core', version: '1.5.2'
}

jacoco {
    toolVersion = "0.8.8"
}

tasks.register('jacocoReport', JacocoReport) {
    dependsOn = ['test']
    sourceDirectories.setFrom files('src/main/scala', 'src/main/kotlin')
    classDirectories.setFrom files('build/classes/scala/main', 'build/classes/kotlin/main')
    executionData.setFrom files('build/jacoco/test.exec')

    reports {
        xml.enabled true
        html.enabled true
    }
}

// Allow To import Kotlin Classes into Scala
compileScala.classpath += files(compileKotlin.outputs)
